# This is a template for all makefiles.

#Set the list of files to be deleted by clean (Targets can also be specified).:
CLEAN_TARGETS += $(ALL_LIBRARIES) *.log *.clog 

# Set the list of target to make while testing.  By default, mytest is the
# only target added.  If the name of the target is changed in the rules then
# the name should be changed accordingly in this list.

TEST_TARGETS += 

# Search for Rules.mk in roottest/scripts
# Algorithm:  Find the current working directory and remove everything after
#  '*roottest/'.  Append the path for Rules.mk from within roottest, which 
#  should be 'scripts/Rules.mk'.  The roottest path is saved in the
#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is 
#  exported to eliminate the overhead of findding the path again during 
#  recursive calls of gmake.
# Since all makefiles should be under roottest or one of its
#  subdirectories and all recursions of gmake are called by 
#    'cd [DIR]; gmake ...'
#  this algorithm should not fail in finding /roottest/ in the
#  current working directory.  
# Issues:  This algorithm will fail if a makefile is called from outside the 
#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from 
#  the home directory.

ifeq ($(strip $(ROOTTEST_HOME)),)
	export ROOTTEST_HOME:=$(shell expr $(CURDIR) : '\(.*/roottest/\)')
endif

include $(ROOTTEST_HOME)/scripts/Rules.mk

libcondHeaders =  DataHeaderElement_p5.h DataHeader_p5.h HepGeom__Transform3D.h \
   libcondProjectInstances.h DataHeaderForm_p5.h \
   DetCondKeyTrans.h libcondLinkDef.h libcondProjectHeaders.h

libcondProjectDict.cxx: $(libcondHeaders) $(ROOTCINT) $(ROOTV)
	$(CMDECHO) rootcint -f libcondProjectDict.cxx libcondProjectHeaders.h libcondLinkDef.h > $@.log 2>&1 || (cat $@.log && exit 1)

libcondProjectSource.$(ObjSuf): libcondProjectDict.cxx

libcond.$(DllSuf): libcondProjectSource.$(ObjSuf)
	$(BuildFromObjs)
